{"version":3,"sources":["components/List.js","App.js","index.js"],"names":["ShowEditingBox","props","id","value","handleTaskTextArrayInput","focusHere","React","useEffect","document","getElementById","focus","type","onChange","ShowTask","task","List","tasks","editing","taskTextArray","deleteItem","showActionItem","currentIndex","href","onClick","handleAcceptChangesButton","className","handleEditButton","ShowOrEditTask","map","uniqid","App","e","console","log","target","setState","prevState","filter","currentItem","editItem","state","taskText","handleTaskInput","bind","this","preventDefault","concat","role","htmlFor","placeholder","addTask","Component","ReactDOM","render","StrictMode"],"mappings":"0OAGMA,EAAiB,SAACC,GAAW,IACvBC,EAAmDD,EAAnDC,GAAIC,EAA+CF,EAA/CE,MAAOC,EAAwCH,EAAxCG,yBAA0BC,EAAcJ,EAAdI,UAM7C,OALAC,IAAMC,WAAU,WACRF,GAAaH,GACbM,SAASC,eAAeP,GAAIQ,WAIhC,uBACIC,KAAK,OACLT,GAAIA,EACJU,SAAUR,EACVD,MAAOA,KAKbU,EAAW,SAACZ,GACd,OACI,8BACKA,EAAMa,QA+EJC,EA1EF,SAACd,GAAW,IACbe,EAAmFf,EAAnFe,MAAOC,EAA4EhB,EAA5EgB,QAASC,EAAmEjB,EAAnEiB,cAAed,EAAoDH,EAApDG,yBAA0BC,EAA0BJ,EAA1BI,UAAWc,EAAelB,EAAfkB,WAC5E,SAASC,EAAeC,GACpB,MAA8B,YAA1BJ,EAAQI,GAEJ,mBAAGC,KAAK,IAAIC,QAAStB,EAAMuB,0BAA3B,SACI,mBAAGC,UAAU,sBAAsBvB,GAAI,QAAQmB,MAMnD,mBAAGC,KAAK,IAAIC,QAAStB,EAAMyB,iBAA3B,SACI,mBAAGD,UAAU,cAAcvB,GAAI,QAAQmB,MAKvD,SAASM,EAAeN,GACpB,MAA8B,WAAzBJ,EAAQI,GAEL,cAAC,EAAD,CACInB,GAAI,OAAOmB,EACXjB,yBAA0BA,EAC1BD,MAAOe,EAAcG,GACrBhB,UAAWA,IAMf,cAAC,EAAD,CAAUS,KAAME,EAAMK,KAIlC,OACI,oBAAII,UAAU,aAAd,SAEQT,EAAMY,KAAI,SAACd,EAAMO,GACb,OACQ,qBAEII,UAAU,mFAFd,UASI,8BACKE,EAAeN,KAEpB,iCACKD,EAAeC,GAChB,mBAAGC,KAAK,IAAIG,UAAU,OAAtB,SACI,mBACIA,UAAU,mBACVvB,GAAI,UAAUmB,EACdE,QAASJ,WAjBhBU,aCoGtBC,E,kDAnKb,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IAeRkB,WAAa,SAACY,GACZC,QAAQC,IAAIF,EAAEG,QACd,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BpB,MACGoB,EAAUpB,MAAMqB,QAAO,SAACC,EAAajB,GACpC,OAAKU,EAAEG,OAAOhC,IAAO,UAAUmB,KAOnCJ,QACGmB,EAAUnB,QAAQoB,QAAO,SAACC,EAAajB,GACtC,OAAKU,EAAEG,OAAOhC,IAAO,UAAUmB,KAOnCH,cACGkB,EAAUlB,cAAcmB,QAAO,SAACC,EAAajB,GAC9C,OAAKU,EAAEG,OAAOhC,IAAO,UAAUmB,UAvClB,EAiDnBG,0BAA4B,SAACO,GAC3B,EAAKI,UAAS,SAACC,GAAD,MAAgB,CAI5BpB,MACGoB,EAAUpB,MAAMY,KAAI,SAACd,EAAMO,GAC1B,MAAI,QAAQA,GAAgBU,EAAEG,OAAOhC,GAC5BkC,EAAUlB,cAAcG,GAGxBP,KAGbG,QACGmB,EAAUnB,QAAQW,KAAI,SAACW,EAAUlB,GAChC,MAAI,QAAQA,GAAgBU,EAAEG,OAAOhC,GAC5B,cAGAqC,UAnEf,EAAKC,MAAQ,CACXxB,MAAO,GACPyB,SAAU,GACVxB,QAAS,GACTC,cAAe,GACfb,UAAW,sBAGb,EAAKqC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKjB,iBAAmB,EAAKA,iBAAiBiB,KAAtB,gBACxB,EAAKvC,yBAA2B,EAAKA,yBAAyBuC,KAA9B,gBAChC,EAAKnB,0BAA4B,EAAKA,0BAA0BmB,KAA/B,gBACjC,EAAKxB,WAAa,EAAKA,WAAWwB,KAAhB,gBAdD,E,qEA2EMZ,GACvBa,KAAKT,UAAS,SAACC,GAAD,MAAgB,CAC5BlB,cACGkB,EAAUlB,cAAcU,KAAI,SAACa,EAAUpB,GACtC,MAAK,OAAOA,GAAiBU,EAAEG,OAAOhC,GAC7B6B,EAAEG,OAAO/B,MAGTsC,KAGbpC,UAAW0B,EAAEG,OAAOhC,S,sCAIR6B,GACda,KAAKT,SAAS,CACZM,SAAUV,EAAEG,OAAO/B,MACnBE,UAAW,yB,8BAGP0B,GAAI,IAAD,OACTA,EAAEc,iBACFD,KAAKT,UAAS,SAACC,GAAD,MAAgB,CAC5BpB,MAAOoB,EAAUpB,MAAM8B,OAAO,EAAKN,MAAMC,UACzCxB,QAASmB,EAAUnB,QAAQ6B,OAAO,eAClCL,SAAU,GACVvB,cAAekB,EAAUlB,cAAc4B,OAAO,EAAKN,MAAMC,UACzDpC,UAAW,2B,uCAGE0B,GACfA,EAAEc,iBACFD,KAAKT,UAAS,SAACC,GAAD,MAAgB,CAC5BnB,QACGmB,EAAUnB,QAAQW,KAAI,SAACd,EAAMO,GAC5B,MAAK,QAAQA,GAAiBU,EAAEG,OAAOhC,GAC9B,UAGAY,W,+BAMP,IAAD,EAOH8B,KAAKJ,MALPxB,EAFK,EAELA,MACAyB,EAHK,EAGLA,SACAxB,EAJK,EAILA,QACAC,EALK,EAKLA,cACAb,EANK,EAMLA,UAGF,OADA2B,QAAQC,IAAIW,KAAKJ,OAEf,sBAAKf,UAAU,kBAAf,UACE,sBAAMsB,KAAK,OAAX,SACE,sBAAKtB,UAAU,cAAf,UACE,uBAAOuB,QAAQ,uBACf,uBACErC,KAAK,OACLc,UAAU,eACVvB,GAAG,qBACH+C,YAAY,WACZrC,SAAUgC,KAAKF,gBAAgBC,KAAKC,MACpCzC,MAAOsC,IAET,qBAAKhB,UAAU,qBAAf,SACE,wBAAQA,UAAU,kBAAkBvB,GAAG,UAAUqB,QAASqB,KAAKM,QAAQP,KAAKC,MAA5E,2BAIN,cAAC,EAAD,CACE5B,MAAOA,EACPU,iBAAkBkB,KAAKlB,iBAAiBiB,KAAKC,MAC7C3B,QAASA,EACTC,cAAeA,EACfd,yBAA0BwC,KAAKxC,yBAAyBuC,KAAKC,MAC7DvC,UAAWA,EACXmB,0BAA2BoB,KAAKpB,0BAA0BmB,KAAKC,MAC/DzB,WAAYyB,KAAKzB,WAAWwB,KAAKC,e,GA7JzBtC,IAAM6C,WCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9C,SAASC,eAAe,W","file":"static/js/main.1ec5734f.chunk.js","sourcesContent":["import React from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nconst ShowEditingBox = (props) => {\r\n    const { id, value, handleTaskTextArrayInput, focusHere } = props;\r\n    React.useEffect(() => {\r\n        if (focusHere == id) {\r\n            document.getElementById(id).focus();\r\n        }\r\n    })\r\n    return(\r\n        <input\r\n            type=\"text\" \r\n            id={id} \r\n            onChange={handleTaskTextArrayInput}\r\n            value={value} \r\n         />\r\n    )\r\n}\r\n\r\nconst ShowTask = (props) => {\r\n    return(\r\n        <div>\r\n            {props.task}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst List = (props) => {\r\n    const { tasks, editing, taskTextArray, handleTaskTextArrayInput, focusHere, deleteItem } = props;\r\n    function showActionItem(currentIndex) {\r\n        if (editing[currentIndex] === \"editing\") {\r\n            return(\r\n                <a href=\"#\" onClick={props.handleAcceptChangesButton}>\r\n                    <i className=\"far fa-check-square\" id={\"edit-\"+currentIndex}></i>\r\n                </a>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n                <a href=\"#\" onClick={props.handleEditButton}>\r\n                    <i className=\"fas fa-edit\" id={\"edit-\"+currentIndex}></i>\r\n                </a>\r\n            )\r\n        }\r\n    }\r\n    function ShowOrEditTask(currentIndex) {\r\n        if ( editing[currentIndex] == \"editing\" ) {\r\n            return(\r\n                <ShowEditingBox \r\n                    id={\"box-\"+currentIndex} \r\n                    handleTaskTextArrayInput={handleTaskTextArrayInput} \r\n                    value={taskTextArray[currentIndex]} \r\n                    focusHere={focusHere}\r\n                />\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n                <ShowTask task={tasks[currentIndex]} />\r\n            )\r\n        }\r\n    }\r\n    return(\r\n        <ul className=\"list-group\">\r\n            {\r\n                tasks.map((task, currentIndex) => {\r\n                    return (\r\n                            <li \r\n                                key={uniqid()} \r\n                                className=\"\r\n                                    list-group-item \r\n                                    d-flex \r\n                                    justify-content-between \r\n                                    align-items-center\r\n                                \"\r\n                            >\r\n                                <div>\r\n                                    {ShowOrEditTask(currentIndex)}\r\n                                </div>\r\n                                <span>\r\n                                    {showActionItem(currentIndex)}\r\n                                    <a href=\"#\" className=\"ml-1\">\r\n                                        <i \r\n                                            className=\"far fa-trash-alt\" \r\n                                            id={\"delete-\"+currentIndex}\r\n                                            onClick={deleteItem}\r\n                                        >\r\n                                        </i>\r\n                                    </a>\r\n                                </span>\r\n                            </li>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport List from './components/List';\nimport uniqid from 'uniqid';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      taskText: \"\",\n      editing: [],\n      taskTextArray: [],\n      focusHere: \"add-item-input-box\"\n\n    };\n    this.handleTaskInput = this.handleTaskInput.bind(this);\n    this.handleEditButton = this.handleEditButton.bind(this);\n    this.handleTaskTextArrayInput = this.handleTaskTextArrayInput.bind(this);\n    this.handleAcceptChangesButton = this.handleAcceptChangesButton.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n  deleteItem = (e) => {\n    console.log(e.target);\n    this.setState((prevState) => ({\n      tasks:\n        (prevState.tasks.filter((currentItem, currentIndex) => {\n          if ( e.target.id == (\"delete-\"+currentIndex) ) {\n            return false;\n          }\n          else {\n            return true;\n          }\n        })),\n      editing:\n        (prevState.editing.filter((currentItem, currentIndex) => {\n          if ( e.target.id == (\"delete-\"+currentIndex)) {\n            return false;\n          }\n          else {\n            return true;\n          }\n        })),\n      taskTextArray:\n        (prevState.taskTextArray.filter((currentItem, currentIndex) => {\n        if ( e.target.id == (\"delete-\"+currentIndex)) {\n          return false;\n        }\n        else {\n          return true;\n        }\n      })),\n\n    }));\n  }\n  handleAcceptChangesButton = (e) => {\n    this.setState((prevState) => ({\n      /* need to change editing to no.. need to update tasks array.. need to update taskTextArray..\n         update focusHere to add-item-input-box to \"\".... \n      */\n      tasks:\n        (prevState.tasks.map((task, currentIndex) => {\n          if (\"edit-\"+currentIndex == e.target.id) {\n            return prevState.taskTextArray[currentIndex];\n          }\n          else {\n            return task;\n          }\n        })),\n      editing:\n        (prevState.editing.map((editItem, currentIndex) => {\n          if (\"edit-\"+currentIndex == e.target.id) {\n            return \"not-editing\";\n          }\n          else {\n            return editItem;\n          }\n        })),\n\n    }));\n  }\n  handleTaskTextArrayInput(e) {\n    this.setState((prevState) => ({\n      taskTextArray:\n        (prevState.taskTextArray.map((taskText, currentIndex) => {\n          if ((\"box-\"+currentIndex) == e.target.id) {\n            return e.target.value;\n          }\n          else {\n            return taskText;\n          }\n        })),\n      focusHere: e.target.id\n\n    }));\n  }\n  handleTaskInput(e) {\n    this.setState({\n      taskText: e.target.value,\n      focusHere: \"add-item-input-box\"\n    })\n  }\n  addTask(e) {\n    e.preventDefault();\n    this.setState((prevState) => ({\n      tasks: prevState.tasks.concat(this.state.taskText),\n      editing: prevState.editing.concat(\"not-editing\"),\n      taskText: \"\",\n      taskTextArray: prevState.taskTextArray.concat(this.state.taskText),\n      focusHere: \"add-item-input-box\"\n    }));\n  }\n  handleEditButton(e) {\n    e.preventDefault();\n    this.setState((prevState) => ({\n      editing: \n        (prevState.editing.map((task, currentIndex) => {\n          if ((\"edit-\"+currentIndex) == e.target.id) {\n            return \"editing\";\n          }\n          else {\n            return task;\n          }\n        })),\n    }));\n\n  }\n  render() {\n    const { \n      tasks, \n      taskText, \n      editing, \n      taskTextArray,  \n      focusHere, \n    } = this.state;\n    console.log(this.state);\n    return(\n      <div className=\"mt-4 ml-4 col-7\">\n        <form role=\"form\">\n          <div className=\"input-group\">\n            <label htmlFor=\"add-item-input-box\" />\n            <input \n              type=\"text\" \n              className=\"form-control\" \n              id=\"add-item-input-box\" \n              placeholder=\"Add Item\" \n              onChange={this.handleTaskInput.bind(this)}\n              value={taskText}\n            />\n            <div className=\"input-group-append\">\n              <button className=\"btn btn-primary\" id=\"addItem\" onClick={this.addTask.bind(this)}>Submit</button>\n            </div>\n          </div>\n        </form>\n        <List \n          tasks={tasks} \n          handleEditButton={this.handleEditButton.bind(this)} \n          editing={editing}\n          taskTextArray={taskTextArray} \n          handleTaskTextArrayInput={this.handleTaskTextArrayInput.bind(this)} \n          focusHere={focusHere} \n          handleAcceptChangesButton={this.handleAcceptChangesButton.bind(this)}\n          deleteItem={this.deleteItem.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}